# This is a basic workflow that is manually triggered

name: compile quicksilver

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: [push, pull_request, workflow_dispatch]

# This workflow makes x86_64 and arm binaries for windows, and linux.

jobs:
  build:
    strategy:
      matrix:
        targetos: [linux, windows]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    name: build quicksilver
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}

      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Compile quicksilver
        run: |
          make install

      - name: Archive quicksilver binaries
        uses: actions/upload-artifact@v3
        with:
          name: quicksilverd-${{ matrix.targetos }}-${{ matrix.arch }}
          path: |
            ~/go/bin/quicksilverd*

  test:
    runs-on: ubuntu-latest
    name: test quicksilver
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
        env:
          GOOS: ${{ matrix.targetos }}
          GOARCH: ${{ matrix.arch }}

      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-test-

      - name: test quicksilver
        run: |
          make test



