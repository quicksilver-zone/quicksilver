syntax = "proto3";
package osmosis.gamm.poolmodels.balancer.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "osmosis/gamm/poolmodels/balancerPool.proto";

option go_package = "github.com/quicksilver-zone/quicksilver/third-party-chains/osmosis-types/gamm/pool-models/balancer";

service Msg {
  rpc CreateBalancerPool(MsgCreateBalancerPool) returns (MsgCreateBalancerPoolResponse);
}

// ===================== MsgCreatePool
message MsgCreateBalancerPool {
  string sender = 1 [(gogoproto.moretags) = "yaml:\"sender\""];

  osmosis.gamm.v1beta1.PoolParams pool_params = 2 [(gogoproto.moretags) = "yaml:\"pool_params\""];

  repeated osmosis.gamm.v1beta1.PoolAsset pool_assets = 3 [(gogoproto.nullable) = false];

  string future_pool_governor = 4 [(gogoproto.moretags) = "yaml:\"future_pool_governor\""];
}

// Returns the poolID
message MsgCreateBalancerPoolResponse {
  uint64 pool_id = 1 [(gogoproto.customname) = "PoolID"];
}
