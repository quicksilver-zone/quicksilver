syntax = "proto3";
package quicksilver.eventmanager.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/quicksilver-zone/quicksilver/x/eventmanager/types";

message Event {
  string chain_id = 1;
  int32 event_type = 2;
  string identifier = 3;
  int32 event_status = 4;
  string module = 5;
  string callback = 6;
  bytes payload = 7;
  google.protobuf.Any execute_condition = 8 [(cosmos_proto.accepts_interface) = "quicksilver.interchainstaking.ConditionI"];
  int64 emitted_height = 9;
}

// GenesisState defines the eventmanager module's genesis state.
message GenesisState {}

message FieldValue {
  string field = 1;
  string value = 2;
  bool negate = 3;
}

message ConditionAny {
  repeated FieldValue fields = 1;
  bool negate = 2;
}

message ConditionAll {
  repeated FieldValue fields = 1;
  bool negate = 2;
}

message ConditionAnd {
  google.protobuf.Any condition1 = 1 [(cosmos_proto.accepts_interface) = "quicksilver.interchainstaking.ConditionI"];
  google.protobuf.Any condition2 = 2 [(cosmos_proto.accepts_interface) = "quicksilver.interchainstaking.ConditionI"];
}

message ConditionOr {
  google.protobuf.Any condition1 = 1 [(cosmos_proto.accepts_interface) = "quicksilver.interchainstaking.ConditionI"];
  google.protobuf.Any condition2 = 2 [(cosmos_proto.accepts_interface) = "quicksilver.interchainstaking.ConditionI"];
}
