syntax = "proto3";
package quicksilver.participationrewards.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "quicksilver/participationrewards/v1/participationrewards.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/participationrewards/types";

// Query provides defines the gRPC querier service.
service Query {
  // Params returns the total set of participation rewards parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get =
        "/quicksilver/participationrewards/v1/params";
  }

  // ProtocolData returns the requested protocol data.
  rpc ProtocolData(QueryProtocolDataRequest)
      returns (QueryProtocolDataResponse) {
    option (google.api.http).get =
        "/quicksilver/participationrewards/v1/protocoldata/{type}/{key}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryProtocolDataRequest is the request type for querying Protocol Data.
message QueryProtocolDataRequest {
  string type = 1;
  string key = 2;
}

// QueryProtocolDataResponse is the response type for querying Protocol Data.
message QueryProtocolDataResponse {
  // data defines the underlying protocol data.
  repeated bytes data = 1 [
    (gogoproto.moretags) = "yaml:\"data\"",
    (gogoproto.casttype) = "encoding/json.RawMessage"
  ];
}