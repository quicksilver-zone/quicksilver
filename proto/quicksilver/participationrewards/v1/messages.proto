syntax = "proto3";
package quicksilver.participationrewards.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";
import "tendermint/crypto/proof.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/participationrewards/types";

// Msg defines the participationrewards Msg service.
service Msg {
  rpc SubmitClaim(MsgSubmitClaim) returns (MsgSubmitClaimResponse) {
    option (google.api.http) = {
      post : "/quicksilver/tx/v1/participationrewards/claim"
      body : "*"
    };
  };
}

// MsgSubmitClaim represents a message type for submitting a participation
// claim regarding the given zone (chain).
message MsgSubmitClaim {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string user_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string zone = 2;
  int64 proof_type = 3;
  repeated Proof proofs = 4
    [ (gogoproto.moretags) = "yaml:\"proofs\"" ];
}

// MsgSubmitClaimResponse defines the MsgSubmitClaim response type.
message MsgSubmitClaimResponse {}

// Proof defines a type used to cryptographically prove a claim.
message Proof {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  bytes key = 1 [ (gogoproto.moretags) = "yaml:\"key\"" ];
  bytes data = 2 [ (gogoproto.moretags) = "yaml:\"data\"" ];
  tendermint.crypto.ProofOps proof_ops = 3
      [ (gogoproto.moretags) = "yaml:\"proof_ops\"" ];
  int64 height = 4 [ (gogoproto.moretags) = "yaml:\"height\"" ];
}
