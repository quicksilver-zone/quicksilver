syntax = "proto3";
package quicksilver.airdrop.v1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "quicksilver/claimsmanager/v1/claimsmanager.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/airdrop/types";

// Msg defines the airdrop Msg service.
service Msg {
  rpc Claim(MsgClaim) returns (MsgClaimResponse) {
    option (google.api.http) = {
      post : "/quicksilver/tx/v1/airdrop/claim"
      body : "*"
    };
  }

  rpc IncentivePoolSpend(MsgIncentivePoolSpend)
      returns (MsgIncentivePoolSpendResponse) {
    option (google.api.http) = {
      post : "/quicksilver/tx/v1/airdrop/incentive_pool_spend"
      body : "*"
    };
  }
}

message MsgClaim {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string chain_id = 1 [ (gogoproto.moretags) = "yaml:\"chain_id\"" ];
  int64 action = 2 [ (gogoproto.moretags) = "yaml:\"action\"" ];
  string address = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  repeated quicksilver.claimsmanager.v1.Proof proofs = 4
      [ (gogoproto.moretags) = "yaml:\"proofs\"" ];
}

message MsgClaimResponse {
  option (gogoproto.goproto_getters) = false;
  uint64 amount = 1 [ (gogoproto.moretags) = "yaml:\"amount\"" ];
}

// MsgIncentivePoolSpend represents a message to send coins from one account to
// another.
message MsgIncentivePoolSpend {
  option (cosmos.msg.v1.signer) = "authority";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string to_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// MsgIncentivePoolSpendResponse defines the MsgIncentivePoolSpend response
// type.
message MsgIncentivePoolSpendResponse {}
