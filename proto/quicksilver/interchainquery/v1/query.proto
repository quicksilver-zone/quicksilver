syntax = "proto3";
package quicksilver.interchainquery.v1;

import "cosmos/base/abci/v1beta1/abci.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "ibc/lightclients/tendermint/v1/tendermint.proto";
import "quicksilver/interchainquery/v1/interchainquery.proto";
import "tendermint/types/types.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/interchainquery/types";

// Query provides defines the gRPC querier service.
service QuerySrvr {
  // Params returns the total set of minting parameters.
  rpc Queries(QueryRequestsRequest) returns (QueryRequestsResponse) {
    option (google.api.http).get =
        "/quicksilver/interchainquery/v1/queries/{chain_id}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryRequestsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string chain_id = 2;
}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryRequestsResponse {
  // params defines the parameters of the module.
  repeated quicksilver.interchainquery.v1.Query queries = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// GetTxResponse is the response type for the Service.GetTx method.
message GetTxWithProofResponse {
  // tx is the queried transaction; deprecated.
  cosmos.tx.v1beta1.Tx tx = 1; // deprecated, v1.2.13
  // tx_response is the queried TxResponses.
  cosmos.base.abci.v1beta1.TxResponse tx_response = 2; // deprecated, v1.2.13
  // proof is the tmproto.TxProof for the queried tx
  tendermint.types.TxProof proof = 3;
  // ibc-go header to validate txs
  ibc.lightclients.tendermint.v1.Header header = 4;
  // tx_bytes is the byte representation of the queried tx
  bytes tx_bytes = 5;
}
